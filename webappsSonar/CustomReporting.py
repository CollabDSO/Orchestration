from xml.dom import minidom
import os
from MasterConfig import *
# from nmaptocsv import *

# xmlreportname = "D:\security_automation\main\webapps\Report_2_2_2017_1_18_10.xml"

# def main():
#     customreporting(xmlreportname)

def customreporting(xmlreport):
    try:
        xmldoc = minidom.parse(
                xmlreport)  # Utilizing and Parsing xml report generated by Arachni to pull out 3rd party results

        reflist = xmldoc.getElementsByTagName('stdout')
        thirdparty = reflist[0].toxml()
        thirdparty = thirdparty.replace("<stdout>", "")
        thirdparty = thirdparty.replace("</stdout>", "")

        entry = xmldoc.getElementsByTagName("entry")

        # Fetching all the URLs Arachni crawled and writing to a text file
        sitemap = []
        for urls in entry:
            sitemap.extend([urls.getAttribute('url')])

        sitemappath = os.path.join(APP_DIR, 'sitemap.txt')

        if (sitemappath):
            os.remove(sitemappath)
            file = open(sitemappath, "a")
            for i in sitemap:
                file.write('<a href="' + str(i) + '">' + str(i) + '</a>' + '\n')

        else:
            print ("Issue in deleting sitemap.txt")

        thirdpartypath = os.path.join(APP_DIR, 'ThirdParty.txt')

        if (thirdpartypath):
            os.remove(thirdpartypath)
            file = open(thirdpartypath, "w")
            file.write(thirdparty)
            file.close()
        else:
            print ("Issue in deleting ThirdParty.txt")

    except Exception as e:
        print(e)

# main ()